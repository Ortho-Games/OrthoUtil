"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[164],{82665:n=>{n.exports=JSON.parse('{"functions":[{"name":"partial","desc":"Create a new function that passes in the given parameters to the given function first.\\n\\n\\t","params":[{"name":"func","desc":"input function","lua_type":"(...any) -> any"},{"name":"...","desc":"arguments you want to be passedin first to func","lua_type":"any"}],"returns":[{"desc":"","lua_type":"(...any) -> any"}],"function_type":"static","source":{"line":19,"path":"src/FunctionUtil.lua"}},{"name":"playServer","desc":"Create a new function that will only play on the server on a new thread.\\n\\n\\t","params":[{"name":"func","desc":"input function","lua_type":"((...any) -> any) | thread"},{"name":"...","desc":"params passed into func","lua_type":"any"}],"returns":[{"desc":"returned thread or nothing if on client.","lua_type":"thread?"}],"function_type":"static","source":{"line":37,"path":"src/FunctionUtil.lua"}},{"name":"playClient","desc":"Create a new function that will only play on the client on a new thread.\\n\\n\\t","params":[{"name":"func","desc":"input function","lua_type":"((...any) -> any) | thread"},{"name":"...","desc":"params passed into func","lua_type":"any"}],"returns":[{"desc":"returned thread or nothing if on server.","lua_type":"thread?"}],"function_type":"static","source":{"line":52,"path":"src/FunctionUtil.lua"}},{"name":"playForPlayer","desc":"Create a new function that will only play on the client on a new thread.\\n\\n\\t","params":[{"name":"player","desc":"player you want this function to play for","lua_type":"Player"},{"name":"func","desc":"input function","lua_type":"((...any) -> any) | thread"},{"name":"...","desc":"params passed into func","lua_type":"any"}],"returns":[{"desc":"returned thread or nothing if on server.","lua_type":"thread?"}],"function_type":"static","source":{"line":68,"path":"src/FunctionUtil.lua"}},{"name":"debounce","desc":"Returns a function that cannot run while the previous call is still running.\\n\\n\\t","params":[{"name":"func","desc":"input function","lua_type":"(...any) -> any"}],"returns":[{"desc":"","lua_type":"(...any) -> ()"}],"function_type":"static","source":{"line":82,"path":"src/FunctionUtil.lua"}},{"name":"timeIt","desc":"Executes a function and prints how long it took to execute.\\n\\n\\t","params":[{"name":"name","desc":"the text you want to display on output.","lua_type":"string"},{"name":"func","desc":"","lua_type":"() -> ()"}],"returns":[],"function_type":"static","source":{"line":104,"path":"src/FunctionUtil.lua"}},{"name":"timeItWarn","desc":"Executes a function and warnm how long it took to execute.\\n\\n\\t","params":[{"name":"name","desc":"the text you want to display on output.","lua_type":"string"},{"name":"func","desc":"","lua_type":"() -> ()"}],"returns":[],"function_type":"static","source":{"line":117,"path":"src/FunctionUtil.lua"}},{"name":"memoize","desc":"Executes a function and prints how long it took to execute.\\n\\n\\t","params":[{"name":"fn","desc":"the text you want to display on output.","lua_type":"(...any) -> T)"}],"returns":[{"desc":"","lua_type":"(...any) -> T"}],"function_type":"static","source":{"line":130,"path":"src/FunctionUtil.lua"}}],"properties":[],"types":[],"name":"FunctionUtil","desc":"","source":{"line":9,"path":"src/FunctionUtil.lua"}}')}}]);