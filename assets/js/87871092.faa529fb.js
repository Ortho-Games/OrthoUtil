"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[75],{29614:e=>{e.exports=JSON.parse('{"functions":[{"name":"slerp","desc":"This function is like lerp but for angles.\\n\\n\\t","params":[{"name":"angle1","desc":"The first angle in radians","lua_type":"number"},{"name":"angle2","desc":"The target angle in radians","lua_type":"number"},{"name":"t","desc":"a number between 0 and 1 indicating the blend between angle1 and angle2","lua_type":"number"}],"returns":[{"desc":"the interpolated angle","lua_type":"number"}],"function_type":"static","source":{"line":13,"path":"src/Math.lua"}},{"name":"scale","desc":"Maps number v, within range inMin inMax to range outMin outMax\\n\\n\\t","params":[{"name":"v","desc":"input number.","lua_type":"number"},{"name":"inMin","desc":"the lower range that we want to assume v falls into.","lua_type":"number"},{"name":"inMax","desc":"the upper range that we want to assume v falls into.","lua_type":"number"},{"name":"outMin","desc":"the lower range that we want to map v to.","lua_type":"number"},{"name":"outMax","desc":"the upper range that we want to map v to.","lua_type":"number"}],"returns":[{"desc":"Returns the scaled number.","lua_type":"number"}],"function_type":"static","source":{"line":30,"path":"src/Math.lua"}},{"name":"scaleClamp","desc":"This works the same as scale, but it slams the value at the end to the out range.\\n\\n\\t","params":[{"name":"v","desc":"input number.","lua_type":"number"},{"name":"inMin","desc":"the lower range that we want to assume v falls into.","lua_type":"number"},{"name":"inMax","desc":"the upper range that we want to assume v falls into.","lua_type":"number"},{"name":"outMin","desc":"the lower range that we want to map v to.","lua_type":"number"},{"name":"outMax","desc":"the upper range that we want to map v to.","lua_type":"number"}],"returns":[{"desc":"Returns the scaled number.","lua_type":"number"}],"function_type":"static","source":{"line":45,"path":"src/Math.lua"}},{"name":"next","desc":"Increment a value such that it wraps around a set range. Useful for cycling array indicies.\\n\\n\\t","params":[{"name":"value","desc":"the current value we want to increment.","lua_type":"number"},{"name":"increment","desc":"the number you want to add to value.","lua_type":"number"},{"name":"wrap","desc":"the higher number there can be that you want to wrap around if you go past.","lua_type":"number"}],"returns":[{"desc":"returns value + increment wrapped around [0, wrap].","lua_type":"number"}],"function_type":"static","source":{"line":58,"path":"src/Math.lua"}},{"name":"prev","desc":"Decrement a value such that it wraps around a set range. Useful for cycling array indicies.\\n\\n\\t","params":[{"name":"value","desc":"the current value we want to increment.","lua_type":"number"},{"name":"decrement","desc":"the number you want to subtract from value.","lua_type":"number"},{"name":"wrap","desc":"the higher number there can be that you want to wrap around if you go past.","lua_type":"number"}],"returns":[{"desc":"returns value - increment wrapped around [0, wrap].","lua_type":"number"}],"function_type":"static","source":{"line":71,"path":"src/Math.lua"}},{"name":"squareMag","desc":"Get the squared magnitude version of a vector to save on computation. Useful for magnitude comparisons.\\n\\n\\t","params":[{"name":"vector","desc":"Input vector you want to get the distance of.","lua_type":"Vector3"}],"returns":[{"desc":"The magnitude value without square root.","lua_type":"number"}],"function_type":"static","source":{"line":82,"path":"src/Math.lua"}},{"name":"isBetweenVectors","desc":"Determines if target is within the triangle origin - a - b.\\n\\n\\t","params":[{"name":"origin","desc":"The start point of a triangle.","lua_type":"Vector3"},{"name":"a","desc":"the far left angle of the triangle from the origin.","lua_type":"Vector3"},{"name":"b","desc":"the far right angle of the triangle from the origin.","lua_type":"Vector3"},{"name":"target","desc":"the target\'s position.","lua_type":"Vector3"}],"returns":[{"desc":"","lua_type":"boolean"}],"function_type":"static","unreleased":true,"source":{"line":97,"path":"src/Math.lua"}}],"properties":[],"types":[],"name":"MathUtil","desc":"","source":{"line":2,"path":"src/Math.lua"}}')}}]);